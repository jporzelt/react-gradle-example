plugins {
  // https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
  id "com.moowork.node" version "1.2.0"
}
final def appName = "webapp"

apply plugin: 'war'

war {
  from ("${appName}/build")
  archiveName = "${project.name}.war"
}

node {
  // Version of node to use.
  version = '8.11.3'

  // Version of npm to use.
  //npmVersion = '5.6.0'

  // Base URL for fetching node distributions (change if you have a mirror).
  distBaseUrl = 'https://nodejs.org/dist'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true

  // Set the work directory for unpacking node
  workDir = file("${project.buildDir}/${appName}/nodejs")

  // Set the work directory for NPM
  npmWorkDir = file("${project.buildDir}/${appName}/npm")

  // Set the work directory where node_modules should be located
  nodeModulesDir = file("${project.projectDir}")
}

task installCreateReactApp(type: NpmTask) {
    args = ['install', 'create-react-app', '--no-save']
}

task createApp(dependsOn: 'installCreateReactApp', type: NodeTask){
  description 'Create React app'
  script = file("node_modules/create-react-app/createReactApp")
  args = [appName]
}

task buildApp(dependsOn: 'npm_install', type: NpmTask){
    description 'Build React app'
    args = ['run-script', 'build']
    execOverrides {
        it.workingDir = appName
    }
}

task serveApp(dependsOn: 'npm_install', type: NpmTask){
    description 'Serve React app'
    args = ['run-script', 'start']
    execOverrides {
        it.workingDir = appName
    }
}


clean {
  delete file("${project.buildDir}")
}
//test.dependsOn npm_test
war.dependsOn buildApp
build.dependsOn buildApp
task start(dependsOn: 'serveApp')
